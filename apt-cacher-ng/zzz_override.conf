# To debug errors
# Debug: 7
# VerboseLog: 1

# Upstream Proxy cause 503 errors
# Only use numeric ip when possible
# DO NOT SET HERE, see Dockerfile
#Proxy:

BindAddress: 0.0.0.0

ExThreshold: 60 # days before purgeing

Remap-klxrep: file:kali_mirrors /kali ; file:backends_kali.default # Kali Linux Archives

# set to 1 to flush logs every line (debug purposes)
# UnbufferLogs: 0

# Sometimes it makes sense to not store the data in cache and just return the
# package data to client while it comes in. The following DontCache* parameters
# can enable this behaviour for certain URL types. The tokens are extended
# regular expressions which the URLs are evaluated against.
#
# DontCacheRequested is applied to the URL as it comes in from the client.
# Example: exclude packages built with kernel-package for x86
# DontCacheRequested: linux-.*_10\...\.Custo._i386
# Example usecase: exclude popular private IP ranges from caching
# DontCacheRequested: 192.168.0 ^10\..* 172.30
#
# DontCacheResolved is applied to URLs after mapping to the target server. If
# multiple backend servers are specified then it's only matched against the
# download link for the FIRST possible source (due to implementation limits).
#
# Example usecase: all Ubuntu stuff comes from a local mirror (specified as
# backend), don't cache it again:
# DontCacheResolved: ubuntumirror.local.net
#
# DontCache directive sets (overrides) both, DontCacheResolved and
# DontCacheRequested.  Provided for convenience, see those directives for
# details.
#
# Example:
# DontCache: .*.local.university.int
# workaround to avoid 503 in cache errors
DontCache: .*dists\/kali-rolling\/InRelease.* .*dists\/kali-rolling\/(main|contrib|non-free)\/.*\/Packages\.gz\.?.* .*dists\/kali-rolling\/(main|contrib|non-free)\/Contents-.*
